# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alhF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

#======================================
# From Isaac Goss.
#======================================
# Give bash vi-keybindings.
set -o vi
export LD_LIBRARY_PATH=/usr/local/cuda-9.0/lib64:$LD_LIBRARY_PATH
export PATH=~/go/bin:/opt/igoss/bin:/opt/pleora/ebus_sdk/Ubuntu-x86_64/bin:/usr/local/go/bin:/usr/local/cuda-9.0/bin:/opt/ModelSim/modelsim_ase/linux:$PATH
# source /opt/Xilinx/Vivado/2020.2/settings64.sh

# Libero Setup
# export PATH=/usr/local/microsemi/Libero_SoC_v12.5/Libero/bin/:$PATH
# export LM_LICENSE_FILE=1702@localhost

alias py=python3
alias manners='function __manners() { man "$1" | grep -A 10 -- "$2"; }; __manners'
alias vivado='vivado -nolog -nojournal'
# Make GHDL Docker image look like a normal application
alias ghdl='docker run -it --rm --mount type=bind,source=$(pwd),target=/src -w=/src ghdl/vunit:llvm ghdl'
alias mkae='make'
alias maek='make'
alias dul='du -d 1 -h'
alias df='df -h'
alias git='GIT_SSL_NO_VERIFY=true git'
alias s='git status'
alias d='git diff'
export EDITOR=vim
alias viv='function __viv() { source /tools/Xilinx/Vivado/20${1}/settings64.sh; }; __viv'
alias pet='function __peta() { source /tools/petalinux/v20${1}/settings.sh; }; __peta'
alias cb='xsel -ib'
alias graph='git log --all --decorate --oneline --graph'
alias rmkey='ssh-keygen -f "/home/igoss/.ssh/known_hosts" -R '
alias nose='python3 -m nose'

# Fuzzy-finding completion
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# I don't know how this is being added in the first place,
# but I don't want it, so I am getting rid of it here.
unset LD_PRELOAD
unset LD_LIBRARY_PATH

# Disable the Ctrl-S terminal pause command
stty -ixon

# Command to mount the Samba share on my desktop,
# when I want.
mnt-desktop() {
    sudo mount -t cifs \
        -o user=isaacgoss14750@gmail.com \
        -o 'pass=IdoLbb5@#52*' \
        //192.168.1.230/igoss-backup \
        /mnt/desktop/
}

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
# export SDKMAN_DIR="/home/igoss/.sdkman"
# [[ -s "/home/igoss/.sdkman/bin/sdkman-init.sh" ]] && source "/home/igoss/.sdkman/bin/sdkman-init.sh"
